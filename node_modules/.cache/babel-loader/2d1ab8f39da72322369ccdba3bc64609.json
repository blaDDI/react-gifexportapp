{"ast":null,"code":"var _jsxFileName = \"C:\\\\udemy react\\\\04-gif-expert-app\\\\src\\\\components\\\\GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = ({\n  category\n}) => {\n  _s();\n\n  const [images, setImages] = useState([]); // Para que el componente se renderize una sóla vez\n\n  useEffect(() => {\n    getGifs();\n  }, []);\n\n  const getGifs = async () => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=HCT13FrOVsWASoEcbc6QvEwtyU3Pe14b&q=${encodeURI(category)}}&limit=10`;\n    const resp = await fetch(url);\n    const {\n      data\n    } = await resp.json();\n    const gifs = data.map(img => {\n      var _img$images;\n\n      return {\n        id: img.id,\n        title: img.title,\n        url: (_img$images = img.images) === null || _img$images === void 0 ? void 0 : _img$images.downsized_medium.url\n      };\n    });\n    console.log(gifs);\n    setImages(gifs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: images.map(img => /*#__PURE__*/_jsxDEV(GifGridItem, { ...img\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["C:/udemy react/04-gif-expert-app/src/components/GifGrid.js"],"names":["React","useState","useEffect","GifGridItem","GifGrid","category","images","setImages","getGifs","url","encodeURI","resp","fetch","data","json","gifs","map","img","id","title","downsized_medium","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAEnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CAFmC,CAInC;;AACAC,EAAAA,SAAS,CAAE,MAAK;AACZM,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAW;AACvB,UAAMC,GAAG,GAAI,mFAAmFC,SAAS,CAACL,QAAD,CAAY,YAArH;AACA,UAAMM,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAxB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMF,IAAI,CAACG,IAAL,EAAvB;AAEA,UAAMC,IAAI,GAAGF,IAAI,CAACG,GAAL,CAAUC,GAAG,IAAI;AAAA;;AAC1B,aAAM;AACFC,QAAAA,EAAE,EAACD,GAAG,CAACC,EADL;AAEFC,QAAAA,KAAK,EAACF,GAAG,CAACE,KAFR;AAGFV,QAAAA,GAAG,iBAACQ,GAAG,CAACX,MAAL,gDAAC,YAAYc,gBAAZ,CAA6BX;AAH/B,OAAN;AAKH,KANY,CAAb;AAOAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAR,IAAAA,SAAS,CAACQ,IAAD,CAAT;AACH,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAA,gBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAWYC,MAAM,CAACU,GAAP,CAAYC,GAAD,iBACP,QAAC,WAAD,OAESA;AAFT,SACYA,GAAG,CAACC,EADhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAXZ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AA0BH,CAnDM;;GAAMd,O;;KAAAA,O","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const [images, setImages] = useState([]);\r\n\r\n    // Para que el componente se renderize una sóla vez\r\n    useEffect( () =>{\r\n        getGifs();\r\n    }, []);\r\n\r\n    const getGifs = async() => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=HCT13FrOVsWASoEcbc6QvEwtyU3Pe14b&q=${ encodeURI(category) }}&limit=10`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return{\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        setImages(gifs);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            <div className=\"card-grid\">\r\n                {/* <li key={ category }> { category }</li> */}            \r\n                {/* <o>\r\n                    {\r\n                        images.map(({id, title}) =>(\r\n                            <li key={ id } >{ title }</li>\r\n                        ))\r\n\r\n                    }\r\n                </o> */}\r\n                {\r\n                        images.map((img) =>(\r\n                            <GifGridItem \r\n                                key = { img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n\r\n                    }\r\n            </div>        \r\n        </>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}